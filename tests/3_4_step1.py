"""
Даны n точек на плоскости найти центр и минимальный радиус круга, куда попадут все эти точки.

Входные данные:

количество точек n (целое число);
n строк, на каждой через пробел записаны координаты точки (вещественные числа).
Выходные данные:

координаты центра круга;
радиус.
Для вывода используйте следующий шаблон:

"центр в точке (%6.3f, %6.3f), r = %6.3f"

Пояснение.

Создать массив точек points.
Найти координаты "средней" точки (среднее значение каждой координаты массива точек) - это центр круга.
Сформировать массив расстояний от средней точки до каждой точки массива points,
используя формулу расстояния между двумя точками);
Найти максимальное расстояние - это радиус круга.

Не проходит 13 тест...
Если средняя точка в программе вычисляется так:

x_mean = np.mean(points[:, 0])
y_mean = np.mean(points[:, 1])
то при выводе координат без формата получается:

-4.4875, 2.4750000000000005
с использованием формата (в котором используется "банковское" округление):

центр в точке (-4.487, 2.475)
Если же применить метод, описанный в этом модуле:

x_y_avg = np.mean(points, 0)
x_avg = x_y_avg[0]
y_avg = x_y_avg[1]
то при выводе координат без формата получается:

-4.487500000000001, 2.4750000000000005
С использованием формата:

центр в точке (-4.488,  2.475)
Чтобы задача прошла, необходимо использовать второй способ.
"""

# импортируем нампи и даем ему имя np
import numpy as np

# Вводим число точек
n = int(input())

# Создаем пустой список для координат точек
dots = []

# Вводим координаты вершин в созданный список
for i in range(n):
    dots.append(list(map(float, input().split())))

# Из списка координат точек создаем массив координат точек
dots_array = np.array(dots)

# Расчитываем среднее значение 1-го столбца (координата ОХ) и 2-го столбца(координата ОУ) массива координат точек
# Получаем массив с координатами ОХ и ОУ, т.е  центр точек - центр нашей окружности
dots_array_avg = np.mean(dots_array, 0)
x_avg = dots_array_avg[0]
y_avg = dots_array_avg[1]

# Вычитаем из массива координат точек массив координат центра, получаем массив координат относительно центра
r_array = dots_array - dots_array_avg

# Создаем массив расстояний по ОХ и по ОУ
r_x = r_array[:, 0]
r_y = r_array[:, 1]

# Создаем массив абсолютных расстояний от центра до каждой точки и берем максимальное значение
r = max(np.hypot(r_x, r_y))

print("центр в точке (%6.3f, %6.3f), r = %6.3f" % (x_avg, y_avg, r))
