"""
Даны n населенных пунктов, каждый из которых в некоторой относительной системе координат имеет две координаты x и y.
В пункте с номером (индексом) k установлена радиостанция с радиусом действия  r км.
Определить, сколько населенных пунктов попадает в радиус ее действия  (включая населенный пункт k).

Входные данные:

строка, в которой через пробел перечислены координаты населенных пунктов по оси OX;
строка, в которой через пробел перечислены координаты населенных пунктов по оси OY;
номер населенного пункта k ( целое число в интервале от 0 до n-1);
радиус действия радиостанции r.
Выходные данные:

количество населенных пунктов, попадающих в радиус действия радиостанции.
Подсказка.

1. Сформируйте список distances с расстояниями от пункта k до остальных населенных пунктов.
Использовать формулу для вычисления расстояния между точками на плоскости (модуль 1, урок 3).

2. Посчитайте количество населенных пунктов, попадающих в действие радиостанции, используя шаблон:

count = 0
for d in distances:
    if # сравните расстояние d с радиусом действия r
        count = count +1
"""

from math import sqrt


# Определяем функцию для вычисления расстояния между двумя точками на плоскости
def dist(a, b, a1, b1):
    return sqrt((a - a1) ** 2 + (b - b1) ** 2)


# Вводим список координат по оси Х
o_x = list(map(int, input().split()))
# Вводим список координат по оси Y
o_y = list(map(int, input().split()))
# Вводим индекс координаты радиостанции
k = int(input())
# Вводим радиус действия радиостанции
r = float(input())
# Находим координаты радиостанции
k_x = o_x[k]
k_y = o_y[k]
# Исключаем координаты радиостанции
# o_x.pop(k)
# o_y.pop(k)
# Создаем список расстояний городов от радиостанции
dist_list = [dist(k_x, k_y, o_x[i], o_y[i]) for i in range(len(o_x))]

count = 0
for i in dist_list:
    if i <= r:
        count += 1
print(count)
