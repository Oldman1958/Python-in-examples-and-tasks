"""
Банки предлагают населению кредиты с двумя способами расчета ежемесячных платежей: аннуитетный  (когда человек ежемесячно платит одинаковую сумму во всем периоде кредитования) и дифференцированный (в этом случае ежемесячный платеж по погашению кредита постепенно уменьшается к концу периода кредитования).

Сумма кредита составляет s рублей, срок кредита n месяцев, процент - k%.

Для расчета платежа в месяц t при дифференцированной выплате  используется формула : pd(t)=s/n + (s−(t−1)⋅s/n)⋅(k/12*100)

Для расчета ежемесячного платежа при аннуитетной выплате используется формула: ka= k/12⋅100

pa=(ka⋅(1+ka)^n/(1+ka)^n - 1)⋅s

Вычислить ежемесячные платежи для каждого месяца,
а также доход банка при каждом способе (разница между суммарной выплатой и суммой кредита).

Входные данные:

сумма кредита s руб (целое число);
срок кредита n месяцев (целое число);
процент k (целое число).
Выходные данные

n строк, на каждой из которой выведены платежи двумя способами выплаты, используя формат:
           "%2d месяц - (диф.) %8.2f руб - (анн.) %8.2f руб".

 доход банка при каждом способе выплаты, для вывода использовать формат:
           "Доход банка - (диф.) %6.2f руб - (анн.) %6.2f руб".
"""


# Создаем функцию вычисления дифференцированного платежа
def compute_dif_payment(t, s, n, k):
    y = s / n + (s - (t - 1) * s / n) * k / 1200
    return y


# Создаем функцию аннуитетного платежа
def compute_ann_payment(t, s, n, k):
    ka = k / 1200
    pa = (ka * (1 + ka) ** n) / ((1 + ka) ** n - 1) * s
    return pa


# Запрашиваем у пользователя входные данные
s = float(input())  # Сумма кредита
n = float(input())  # Срок кредита
k = float(input())  # Процент по кредиту

# Проверяем входные данные
if s <= 0 or n <= 0 or k <= 0:
    print('Некорректные входные данные')
    exit()
else:
    # Составляем список с номерами месяцев
    pay_month = [t + 1 for t in range(0, int(n))]

    # Составляем список с суммой дифференцированных платежей за месяц
    pay_dif_list = [compute_dif_payment(t, s, n, k) for t in pay_month]

    # Составляем список с суммой аннуитетных платежей за месяц
    pay_ann_list = [compute_ann_payment(t, s, n, k) for t in pay_month]

# Выводим информацию в табличном виде
for i in range(int(n)):
    print("%2d месяц - (диф.) %8.2f руб - (анн.) %8.2f руб" % (pay_month[i], pay_dif_list[i], pay_ann_list[i]))

# Высчитываем доход банка
d_dif = sum(pay_dif_list) - s
d_ann = sum(pay_ann_list) - s

print("Доход банка - (диф.) %6.2f руб - (анн.) %6.2f руб" % (d_dif, d_ann))
