"""
Дан многоугольник на плоскости, заданный  координатами своих вершин.
Найти координаты вершин многоугольника, полученные поворотом каждой точки  на заданный угол вокруг начала координат.
Вычислить средние значения координат по оси ОХ и ОУ повернутого многоугольника.

Входные данные:

количество вершин многоугольника (целое число);
список вершин многоугольника, каждая вершина на отдельной строке, строка состоит из двух чисел через пробел,
определяющие координаты вершины по оси ОХ и OY (целые числа);
угол поворота в градусах (целое число).

Выходные данные:

среднее значение абсцисс (координат x) и ординат(координат y) точек повернутого многоугольника,
для вывода использовать шаблон:

"avg_x = %6.2f, avg_y = %6.2f"

Пояснение:

Создать двухмерный массив из вершин многоугольника (количество строк - количество вершин, количество столбцов  2,
для координат x и у точки).
Составить матрицу поворота вокруг центра координат (ϕ - значение угла поворота в радианах):
rotate=[cos(ϕ)  sin(ϕ)]
       [-sin(ϕ) cos(ϕ)]

Умножить массив вершин на матрицу поворота. Полученная матрица - координаты вершин многоугольника после поворота.
Найти среднее значение первого столбца (avg_x) и среднее значение второго (avg_y).
"""

# импортируем нампи и даем ему имя np
import numpy as np

# Вводим число вершин многоугольника
n = int(input())

# Создаем пустой список для координат вершин
tops = []

# Вводим координаты вершин в созданный список
for i in range(n):
    tops.append(list(map(int, input().split())))

# Вводим угол поворота
angle = np.radians(int(input()))

# Из списка координат вершин создаем массив координат вершин
tops_array = np.array(tops)

# Создаем массив - матрица поворота вокруг центра оси координат
rotate = np.array([[np.cos(angle), np.sin(angle)], [-np.sin(angle), np.cos(angle)]])

# Получаем массив координат вершин после поворота путем умножения массива вершин на матрицу поворота
tops_rotate = np.dot(tops_array, rotate)

# Среднее значение первого столбца
avg_x = np.average(tops_rotate[:, 0])

# Среднее значение второго столбца
avg_y = np.average(tops_rotate[:, 1])

print("avg_x = %6.2f, avg_y = %6.2f" % (avg_x, avg_y))
