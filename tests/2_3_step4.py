"""
Рассчитать ежемесячную сумму платежа по кредиту при использовании дифференцированных выплат
(в этом случае ежемесячный платеж по погашению кредита постепенно уменьшается к концу периода кредитования).
Сумма кредита составляет s рублей, срок кредита n месяцев, процент - k%.

Для расчета платежа в месяц t используется формула: p(t)=s/n+(s−(t−1)⋅s/n)*(k/12*100)

Вычислить платежи для каждого месяца и доход банка (разница между суммарной выплатой и суммой кредита).

Входные данные:

сумма кредита s руб (целое число);
срок кредита n месяцев (целое число);
процент k (целое число).
Выходные данные

n строк, на каждой из которых выведены платежи за каждый месяц, для вывода использовать формат:
          "%2d месяц - %8.2f руб"

 доход банка, для вывода использовать формат:
           "Доход банка - %6.2f руб"

Рекомендация. Строку форматного вывода  скопировать из окна кода!

Указание.
При описании функции для вычисления ежемесячного платежа в качестве параметров передайте не только месяц, но и сумму, срок  и процент кредита. Заголовок функции может выглядеть так:

def compute_payment(t, s, n, k):
"""


# Создаем функцию вычисления платежа
def compute_payment(t, s, n, k):
    y = s / n + (s - (t - 1) * s / n) * k / 1200
    return y


# Запрашиваем у пользователя входные данные
s = float(input())
n = float(input())
k = float(input())

# Проверяем входные данные
if s <= 0 or n <= 0 or k <= 0:
    print('Некорректные входные данные')
    exit()
else:
    # Составляем список с номерами месяцев
    pay_month = [t + 1 for t in range(0, int(n))]
    # print(pay_month)

    # Составляем список с суммой платежа за месяц
    pay_list = [compute_payment(t, s, n, k) for t in pay_month]
    # print(pay_list)

# Высчитываем доход банка
d = sum(pay_list) - s

# Выводим информацию в табличном виде
for i in range(int(n)):
    print("%2d месяц - %8.2f руб" % (pay_month[i], pay_list[i]))
print("Доход банка - %6.2f руб" % d)
