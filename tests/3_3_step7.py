"""
Решить систему линейных уравнений матричным способом.

Для этого:

сформировать матрицу А, состоящую из коэффициентов левых частей уравнений (должна получиться матрица размером 4 на 4);
сформировать вектор В, каждый элемент которого - соответствующие значения правых частей уравнений;
вычислить вектор - решение системы уравнений по формуле:

X = A^−1⋅B

вывести полученный вектор, округлив значения до одного знака после запятой.
Входные данные:

нет
Выходные данные:

вектор-решение.
Результат при выводе округлить до одного знака после запятой, используя функцию модуля numpy.
"""

# put your python code here
import numpy as np

import numpy.linalg as alg

# Создать матрицу A из коэффициентов левых частей уравнения в виде двухмерного массива:
a = np.array([[-2, -8.5, -3.4, 3.5], [0, 2.4, 0, 8.2], [2.5, 1.6, 2.1, 3], [0.3, -0.4, -4.8, 4.6]])
# Создать матрицу B из коэффициентов правых частей уравнения в виде двухмерного массива:
b = np.array([-1.88, -3.28, -0.5, -2.83])

# Вычислить обратную матрицу A-1:
a_inv = alg.inv(a)

x = np.dot(a_inv, b)

print(np.round(x, 1))
